from naive_realization import naive_dijkstra
import pytest

test_data = [(
                [[0, 3, 1, 3, 0, 0],
                 [3, 0, 4, 0, 0, 0],
                 [1, 4, 0, 0, 7, 5],
                 [3, 0, 0, 0, 0, 2],
                 [0, 0, 7, 0, 0, 4],
                 [0, 0, 5, 2, 4, 0]], 3, [3, 6, 4, 0, 6, 2]),
             (
                [[0, 3, 1, 3, 0, 0],
                 [3, 0, 4, 0, 0, 0],
                 [1, 4, 0, 0, 7, 5],
                 [3, 0, 0, 0, 0, 2],
                 [0, 0, 7, 0, 0, 4],
                 [0, 0, 5, 2, 4, 0]], 5, [5, 8, 5, 2, 4, 0]),
             (
                [[0, 2, 4, 8, 0, 16],
                 [2, 0, 0, 3, 0, 0],
                 [4, 0, 0, 3, 0, 0],
                 [8, 3, 3, 0, 5, 3],
                 [0, 0, 0, 5, 0, 5],
                 [16, 0, 0, 3, 5, 0]], 1, [2, 0, 6, 3, 8, 6]),
             (
                [[0, 2, 4, 5, 10, 8],
                 [2, 0, 0, 3, 0, 0],
                 [4, 0, 0, 3, 0, 0],
                 [8, 3, 3, 0, 5, 3],
                 [0, 0, 0, 5, 0, 5],
                 [16, 0, 0, 3, 5, 0]], 2, [4, 6, 0, 3, 8, 6]),
             (
                [[0, 10, 3, 0],
                 [10, 0, 4, 0],
                 [3, 4, 0, 11],
                 [0, 0, 11, 0]], 1, [7, 0, 4, 15]),
             (
                [[0, 7, 3, 14],
                 [10, 0, 4, 0],
                 [3, 4, 0, 11],
                 [0, 0, 11, 0]], 0, [0, 7, 3, 14])]


@pytest.mark.parametrize("matrix, vertex, expected_result", test_data)
def test_naive_dijkstra(matrix, vertex, expected_result):
    assert naive_dijkstra(matrix, vertex) == expected_result
